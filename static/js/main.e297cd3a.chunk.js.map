{"version":3,"sources":["components/MovieSearch/MovieSearch.js","components/User/User.js","components/MovieCard/MovieCard.js","components/Results/Results.js","containers/MovieDetails/MovieDetails.js","containers/App.js","reportWebVitals.js","index.js"],"names":["MovieSearch","onSearchSubmit","onTermChange","className","onSubmit","type","placeholder","aria-label","style","User","href","MovieCard","id","image","title","rating","onMovieClick","onClick","alt","src","data-rating","Results","movies","list","map","movie","index","poster_path","vote_average","MovieDetails","route","selectedMovie","Segment","Grid","stackable","columns","Column","Image","Item","Content","Label","as","basic","Rating","maxRating","defaultRating","icon","size","Meta","release_date","original_language","Description","overview","Button","floated","content","secondary","vote_count","API_KEY","App","e","setState","movieTerm","target","value","term","preventDefault","state","length","match","popup","fetch","then","response","json","data","results","total_pages","activePage","pagination_visibility","errors","onPageChange","pageInfo","movieDetailsID","currentTarget","console","log","onRouteChange","newRoute","this","Fragment","Popup","open","position","trigger","Pagination","boundaryRange","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e297cd3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieSearch.css';\r\n\r\nconst MovieSearch = ({onSearchSubmit,onTermChange}) => {\r\n\r\n    return (\r\n          \r\n        <div className=\"searchInput\">              \r\n            <form onSubmit={onSearchSubmit}>\r\n                <div className=\"ui inverted transparent icon input\">\r\n                \r\n                    <input \r\n                            type=\"search\" \r\n                            placeholder=\"Search\" \r\n                            aria-label=\"Search\"\r\n                            placeholder='search movies'\r\n                            onChange={onTermChange}\r\n                            />\r\n                        <i className=\"search icon large\" style={{'color':'white'}}></i>\r\n                </div>\r\n            </form>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieSearch;","import React from 'react';\r\nimport './User.css';\r\nconst User = () => {\r\n    return (\r\n        <div className='profile '>\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n            <h5>\r\n            <i className=\"bi bi-collection-fill\"></i>\r\n            <a href=\"#\"> Collections </a>\r\n            </h5>   \r\n            </nav>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport './MovieCard.css';\r\n\r\nconst MovieCard = ({id,image,title,rating,onMovieClick}) => {\r\n\r\n\r\n    return (\r\n      \r\n            <div id={id} className=\"card\"  onClick={onMovieClick}>\r\n            <div className=\"image\" >\r\n                    <img alt={title} src={image}/>\r\n                </div>\r\n                <div className=\"extra\">\r\n                    <h4 style={{'textAlign':'center'}}>{title}</h4>\r\n                   \r\n                    <div className=\"ui star rating right floated\" data-rating=\"4\"> <b>Rating:  </b>{rating}</div>\r\n                </div>\r\n            </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport './Results.css';\r\n\r\nconst Results = ({movies,onMovieClick}) => {\r\n    \r\n   \r\n\r\n    const list = movies.map((movie,index) => {\r\n\r\n        return (\r\n        <MovieCard \r\n            key={index} \r\n            id={index}\r\n            image={\"https://www.themoviedb.org/t/p/w500\"+movie.poster_path+\"\"} \r\n            title={movie.title} \r\n            rating={movie.vote_average} \r\n            onMovieClick={onMovieClick}\r\n        />\r\n         \r\n        )\r\n            \r\n     });\r\n     \r\n     \r\n\r\n     return (  \r\n     <div className='movies-container'>\r\n         <div className=\"ui link cards\">\r\n             {list}\r\n         </div>\r\n    </div>);\r\n }\r\n\r\nexport default Results\r\n","import React from 'react';\r\nimport { Grid,  Image, Segment,Button, Item , Rating, Label} from 'semantic-ui-react';\r\nimport './MovieDetails.css';\r\n\r\nconst MovieDetails = ({route,selectedMovie}) => {\r\n   \r\n    \r\n    return (\r\n        <div className=\"MovieDetails\">\r\n            <Segment placeholder >\r\n            <Grid stackable columns={3}>\r\n                \r\n                <Grid.Column>\r\n            \r\n                    <Image className='poster'src={\"https://www.themoviedb.org/t/p/w500\"+selectedMovie.poster_path+\"\"} />\r\n            \r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                <Item>\r\n                    <Item.Content>\r\n                        <h1>{selectedMovie.title}   </h1> \r\n                        <Label as='a' basic>\r\n                        <Rating maxRating={6} defaultRating={(6*selectedMovie.vote_average)/10} icon='star' size='large' style={{'paddingRight':'10px'}} />\r\n                        \r\n                        score: {selectedMovie.vote_average}\r\n                        </Label>\r\n                      <p> <br /></p>\r\n                       <Item.Meta>\r\n                      \r\n                        <Label>\r\n                        <span className='price'>Release Date: </span>\r\n                            {selectedMovie.release_date}\r\n                        </Label>\r\n                        \r\n                        <Label>\r\n                        <span className='price'>Spoken Languages: </span>\r\n                            {selectedMovie.original_language}\r\n                        </Label>\r\n                        <span className='stay'></span>\r\n                        </Item.Meta>\r\n                        <br /><Item.Description>{selectedMovie.overview}</Item.Description>\r\n                        <span>\r\n                       \r\n                        </span>\r\n                    </Item.Content>\r\n                </Item>\r\n        \r\n                </Grid.Column>\r\n               <Grid.Column>\r\n                 <Button floated='right' content='close' secondary onClick={()=> route('search')} />\r\n               </Grid.Column>\r\n            </Grid>\r\n            <Grid stackable columns={1}>\r\n                \r\n               \r\n                <Grid.Column>\r\n                <Item>\r\n                    <Item.Content>\r\n                    \r\n                    <Label as='a' basic>\r\n                    Votes: {selectedMovie.vote_count}\r\n                    </Label>\r\n                    </Item.Content>\r\n                </Item>\r\n            \r\n                </Grid.Column>\r\n               \r\n            </Grid>\r\n            \r\n                    \r\n                      \r\n            </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React, { Component } from 'react';\r\n//import {BrowserRouter as Router, Switch, Route,    Link, useParams} from 'react-router-dom'; \r\nimport MovieSearch from '../components/MovieSearch/MovieSearch';\r\nimport User from '../components/User/User';\r\nimport Results from '../components/Results/Results';\r\nimport MovieDetails from './MovieDetails/MovieDetails';\r\nimport { Pagination,Popup } from 'semantic-ui-react'\r\nimport './App.css';\r\n\r\nconst API_KEY='85204a8cc33baf447559fb6d51b18313';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state ={\r\n            movieTerm :'',\r\n            movies: [],\r\n            activePage:1,\r\n            total_pages:0,\r\n            pagination_visibility:'hidden',\r\n            errors:'',\r\n            popup:false,\r\n            movieDetailsID:0,\r\n            route:\"search\"\r\n\r\n        }\r\n        \r\n    }\r\n\r\n   \r\n    onTermChange =(e) =>{\r\n        this.setState({movieTerm:e.target.value});\r\n        \r\n        \r\n    }\r\n    onSearchSubmit =(term) =>{\r\n        term.preventDefault(); //restict app to be reloaded\r\n       \r\n        if (this.state.movieTerm.length>2 && this.state.movieTerm.match(/^[0-9a-z]+$/)){\r\n            this.setState({popup:false});\r\n            //console.log('the query term is:',this.state.movieTerm);\r\n            fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&query=${this.state.movieTerm}`)\r\n            .then(response => response.json())\r\n            .then(data=>{\r\n                this.setState({movies:data.results,total_pages:data.total_pages,activePage:1,pagination_visibility:'visible'});\r\n                //console.log(data);\r\n            });  \r\n        }else if (this.state.movieTerm.length<3 && this.state.movieTerm.length!==0){\r\n            this.setState({errors:'you must type at least 3 characters',popup:true})\r\n        }else{\r\n            this.setState({errors:'You have typed invalid characters',popup:true})\r\n        }\r\n\r\n    }\r\n\r\n    onPageChange = (e, pageInfo) =>{\r\n        this.setState({activePage: pageInfo.activePage}, ()=>{\r\n            \r\n            fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=${this.state.activePage}&include_adult=false&query=${this.state.movieTerm}`)\r\n            .then(response => response.json())\r\n            .then(data=>{\r\n                this.setState({movies:data.results,total_pages:data.total_pages});\r\n                //console.log(data);\r\n            });\r\n\r\n        });\r\n\r\n        \r\n        \r\n    }\r\n\r\n    onMovieClick =(e) =>{\r\n        //find movie id\r\n        //console.log(this.state.movies[e.currentTarget.id]);\r\n        \r\n        this.setState({movieDetailsID:e.currentTarget.id,route:\"details\"},()=>console.log(this.state.movies[this.state.movieDetailsID]) );\r\n        \r\n\r\n    }\r\n     onRouteChange = (newRoute) =>{\r\n\r\n        if (newRoute === 'search'){\r\n          this.setState({route:'search'});\r\n          }\r\n    }\r\n     \r\n     \r\n\r\n    render() {\r\n        return (\r\n               \r\n                <div className=\"app\">  \r\n                    <User />\r\n                    {\r\n                        (this.state.route===\"search\")\r\n                         ?<React.Fragment>\r\n                            <Popup\r\n                                content={this.state.errors}\r\n                                open ={this.state.popup}\r\n                                position='top center'\r\n                                trigger={<MovieSearch onTermChange={this.onTermChange} onSearchSubmit={this.onSearchSubmit}/>}\r\n                            />  \r\n                            <Results movies={this.state.movies} onMovieClick={this.onMovieClick}/>\r\n                            <section className=\"pages\"  style={{'visibility':this.state.pagination_visibility}}>\r\n                                <Pagination\r\n                                \r\n                                    activePage={this.state.activePage}\r\n                                    boundaryRange={0}\r\n                                    ellipsisItem={null}\r\n                                    firstItem={null}\r\n                                    lastItem={null}\r\n                                    siblingRange={3}\r\n                                    totalPages={this.state.total_pages}\r\n                                    onPageChange ={this.onPageChange}\r\n                                />\r\n                            </section>\r\n                        </React.Fragment>\r\n                        :<MovieDetails route={this.onRouteChange} selectedMovie={this.state.movies[this.state.movieDetailsID]} />\r\n                 // \r\n                  \r\n                      \r\n               }\r\n                \r\n                </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}